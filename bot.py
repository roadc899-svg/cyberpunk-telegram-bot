# bot.py
import os
import random
from flask import Flask, request, jsonify

app = Flask(__name__)

GAMES = {
    "chicken": {
        "title": "Chicken Road",
        "steps": [
            ("üêî –ö—É—Ä–æ—á–∫–∞ –≥–æ—Ç–æ–≤–∏—Ç—Å—è –∫ –ø—Ä—ã–∂–∫—É...", 10),
            ("üîé –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Ä–æ–≥–∏...", 30),
            ("‚ö° –ü–æ–∏—Å–∫ –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö –∫–ª–µ—Ç–æ–∫...", 55),
            ("üöÄ –†–∞—Å—á—ë—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ –ø—Ä—ã–∂–∫–∞...", 80),
            ("‚úÖ –°–∏–≥–Ω–∞–ª –≥–æ—Ç–æ–≤! –£–¥–∞—á–∏!", 100),
        ],
    },
    "mines": {
        "title": "Lucky Mines",
        "steps": [
            ("üß≠ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –º–æ–¥—É–ª—è–º...", 10),
            ("‚öôÔ∏è –ê–Ω–∞–ª–∏–∑ –∫–∞—Ä—Ç—ã –º–∏–Ω...", 25),
            ("üí£ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∏–Ω...", 50),
            ("üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö –∑–æ–Ω...", 80),
            ("‚úÖ –°–∏–≥–Ω–∞–ª Lucky Mines –≥–æ—Ç–æ–≤!", 100),
        ],
    },
    "aviator": {
        "title": "Aviator",
        "steps": [
            ("‚úàÔ∏è –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ø–∏–ª–æ—Ç—É...", 10),
            ("üì° –°–±–æ—Ä —Ç–µ–ª–µ–º–µ—Ç—Ä–∏–∏...", 30),
            ("üîé –ê–Ω–∞–ª–∏–∑ —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏–∏...", 60),
            ("‚ö° –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞...", 90),
            ("‚úÖ –°–∏–≥–Ω–∞–ª Aviator –≥–æ—Ç–æ–≤!", 100),
        ],
    },
    "penalty": {
        "title": "Penalty ShotOut",
        "steps": [
            ("üß§ –í—Ä–∞—Ç–∞—Ä—å –≥–æ—Ç–æ–≤–∏—Ç—Å—è...", 10),
            ("üìä –ê–Ω–∞–ª–∏–∑ –≤—Ä–∞—Ç–∞—Ä—Å–∫–æ–π –ø–æ–∑–∏—Ü–∏–∏...", 35),
            ("üéØ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≥–ª–æ–≤...", 65),
            ("‚öΩ –§–∏–Ω–∞–ª—å–Ω–æ–µ —Ä–∞—Å—á—ë—Ç–Ω–æ–µ –æ–∫–Ω–æ...", 90),
            ("‚úÖ –°–∏–≥–Ω–∞–ª Penalty –≥–æ—Ç–æ–≤!", 100),
        ],
    },
}

DEFAULT_FLOW = [
    ("üß† –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–∏—Å—Ç–µ–º–µ...", 10),
    ("‚öôÔ∏è –ê–Ω–∞–ª–∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞...", 25),
    ("üí£ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∏–Ω...", 50),
    ("üß© –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö...", 75),
    ("‚úÖ –î–æ—Å—Ç—É–ø –∫ HackBot –æ—Ç–∫—Ä—ã—Ç!", 100),
]


@app.route("/", methods=["GET"])
def index():
    return "OK", 200


@app.route("/webhook", methods=["POST"])
def webhook():
    """
    –û–∂–∏–¥–∞–µ–º—ã–π JSON –æ—Ç Chatterfy:
    {
      "user": {"name": "Ivan"},
      "game": "mines"    # optional, one of: chicken/mines/aviator/penalty
    }

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
    {
      "dynamic_messages": [
         {"text": "üí£ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∏–Ω... (50%)"},
         ...
      ],
      "meta": {"game": "Lucky Mines"}
    }
    """
    try:
        data = request.get_json(force=True) or {}
    except Exception:
        data = {}

    user = data.get("user", {}) or {}
    user_name = user.get("name") or user.get("first_name") or "–¥—Ä—É–≥"

    requested_game = (data.get("game") or "").lower()
    if requested_game in GAMES:
        chosen = GAMES[requested_game]
    else:
        # –∏–Ω–æ–≥–¥–∞ –º–æ–∂–µ—Ç –ø—Ä–∏–π—Ç–∏ game –∫–∞–∫ "Lucky Mines" - –ø–æ–ø—Ä–æ–±—É–µ–º –ø—Ä–æ—Å—Ç—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
        for key, spec in GAMES.items():
            if requested_game and requested_game in spec["title"].lower():
                chosen = spec
                break
        else:
            # —Å–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä
            chosen = random.choice(list(GAMES.values()))

    steps = chosen.get("steps", DEFAULT_FLOW)

    messages = []
    # –ø—Ä–µ–¥–∏—Å–ª–æ–≤–∏–µ –º–æ–∂–Ω–æ –∫–∞—Å—Ç–æ–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å
    messages.append({"text": f"–ü—Ä–∏–≤–µ—Ç, {user_name}! –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞—é —Å–∏–≥–Ω–∞–ª –¥–ª—è {chosen['title']}..."})

    for text, prog in steps:
        messages.append({"text": f"{text} ({prog}%)"})

    messages.append({"text": "–ï—Å–ª–∏ —Ö–æ—á–µ—à—å ‚Äî –Ω–∞–∂–º–∏ ‚ö° –ü–æ–ª—É—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª"} )

    return jsonify({
        "dynamic_messages": messages,
        "meta": {"game": chosen["title"]}
    }), 200


if __name__ == "__main__":
    port = int(os.getenv("PORT", 5000))
    app.run(host="0.0.0.0", port=port)
