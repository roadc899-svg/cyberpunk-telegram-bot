import asyncio
import os
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ Render Environment
TOKEN = os.getenv("BOT_TOKEN")
DELAY_SECONDS = 0.8

# ================================
# üî∞ –®–∞–≥–∏ –∑–∞–≥—Ä—É–∑–∫–∏ (–∏—Å–ø.) —Å –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º–∏
# ================================
LOADING_STEPS = [
    ("Conexi√≥n al sistema...", 0),
    ("Verificaci√≥n de registro...", 12),
    ("Verificaci√≥n de dep√≥sito...", 25),
    ("An√°lisis del historial de apuestas...", 40),
    ("Conexi√≥n de la cuenta a Lucky Mines...", 55),
    ("Recolecci√≥n de datos del algoritmo de ubicaci√≥n de minas...", 70),
    ("Creaci√≥n de la primera se√±al...", 88),
    ("‚úÖ Acceso al hackbot concedido.", 100),
]

# ================================
# üî∞ –ö–æ–º–∞–Ω–¥–∞ /start
# ================================
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    msg = await update.message.reply_text("‚öôÔ∏è Iniciando proceso...")
    for text, pct in LOADING_STEPS:
        await asyncio.sleep(DELAY_SECONDS)
        try:
            # –î–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —à–∞–≥–∞ –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º "(100%)" –¥–≤–∞–∂–¥—ã, –Ω–æ –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å ‚Äî –∑–¥–µ—Å—å –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç—ã —É –≤—Å–µ—Ö
            await msg.edit_text(f"{text} ({pct}%)")
        except Exception as e:
            print(f"‚ö†Ô∏è Edit error: {e}")
            continue

    await msg.reply_text("‚úÖ Proceso completado. Acceso concedido al hackbot.")


# ================================
# üî∞ –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
# ================================
def main():
    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    print("‚úÖ Bot started and listening (Spanish progress mode)...")
    app.run_polling(allowed_updates=Update.ALL_TYPES)


if __name__ == "__main__":
    main()
