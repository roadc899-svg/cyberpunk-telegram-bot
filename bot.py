import asyncio
import os
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ Render Environment
TOKEN = os.getenv("BOT_TOKEN")
DELAY_SECONDS = 1.0

# ================================
# üî∞ –®–∞–≥–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Å –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º–∏
# ================================
LOADING_STEPS = [
    ("Conexi√≥n al sistema", 0),
    ("Verificaci√≥n de registro", 12),
    ("Verificaci√≥n de dep√≥sito", 25),
    ("An√°lisis del historial de apuestas", 40),
    ("Conexi√≥n de la cuenta a Lucky Mines", 55),
    ("Recolecci√≥n de datos del algoritmo de ubicaci√≥n de minas", 70),
    ("Creaci√≥n de la primera se√±al", 88),
    ("‚úÖ Acceso al hackbot concedido", 100),
]

# ================================
# üî∞ –§—É–Ω–∫—Ü–∏—è –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
# ================================
def align_text(text: str, total_length: int = 45) -> str:
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Ç–æ—á–∫–∏, —á—Ç–æ–±—ã –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –±—ã–ª–∏ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–π –¥–ª–∏–Ω—ã."""
    dots = "." * max(0, total_length - len(text))
    return f"{text}{dots}"

# ================================
# üî∞ –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
# ================================
def make_progress_bar(percent: int, length: int = 20) -> str:
    filled = int(length * percent / 100)
    empty = length - filled
    return f"[{'‚ñà' * filled}{'‚ñí' * empty}] {percent}%"

# ================================
# üî∞ –ö–æ–º–∞–Ω–¥–∞ /start
# ================================
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    msg = await update.message.reply_text("‚öôÔ∏è Iniciando proceso...")
    
    # –ü—Ä–æ—Ö–æ–¥–∏–º –≤—Å–µ —à–∞–≥–∏ –∫—Ä–æ–º–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ
    for text, pct in LOADING_STEPS[:-1]:
        await asyncio.sleep(DELAY_SECONDS)
        aligned = align_text(text)
        bar = make_progress_bar(pct)
        try:
            await msg.edit_text(f"{aligned}\n{bar}")
        except Exception as e:
            print(f"‚ö†Ô∏è Edit error: {e}")
            continue

    # –ü–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥ (–ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç –±–µ–∑ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞)
    final_text, _ = LOADING_STEPS[-1]
    await asyncio.sleep(DELAY_SECONDS)
    aligned_final = align_text(final_text)
    try:
        await msg.edit_text(aligned_final)
    except Exception as e:
        print(f"‚ö†Ô∏è Edit error (final): {e}")

# ================================
# üî∞ –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
# ================================
def main():
    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    print("‚úÖ Bot started and listening (aligned progress mode)...")
    app.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == "__main__":
    main()
